mutate(`CD8-T` = (`TCells CD8+ [%]`/100)*TCells)
CellsPropBC.raw <- CellsPropBC %>%
mutate(Monocytes = (M06 + M15)*MyeloidCells)%>%
mutate(Macrophages = (M01 + M02 + M03 + M04 + M08 + M09 + M11 + M13 + M14 + M16 + M17)*MyeloidCells)%>%
mutate(OtherMyeloid = (M05 + M07 + M10 + M12 + M18 + M19)*MyeloidCells)%>%
mutate(OtherImmune = OtherMyeloid+ OtherTcells)%>%
filter(Tissue=="Tumor")%>%
dplyr::select(`Sample ID`,EndothelialCells,EpithelialCells,Fibroblasts,Other,NK,BCells,PlasmaCells,DC,`CD4-T`,`CD8-T`,Macrophages,OtherImmune,Basophils,Granulocytes,Monocytes)%>%
column_to_rownames(var = "Sample ID")
## Correction to myeloid cells percentage
CellsPropBC <- CellsPropBC %>%
mutate(Monocytes = (M06 + M15)*MyeloidCells)%>%
mutate(Macrophages = (M01 + M02 + M03 + M04 + M08 + M09 + M11 + M13 + M14 + M16 + M17)*MyeloidCells)%>%
mutate(OtherMyeloid = (M05 + M07 + M10 + M12 + M18 + M19)*MyeloidCells)%>%
mutate(OtherImmune = OtherMyeloid+ OtherTcells+Basophils+Granulocytes+Monocytes)
#mutate(CD4TCells = (T02+T03+T04+T08+T09+T13+T17+T18+T20)*50)%>%
#mutate(Tregs = T01*50)%>%
#mutate(CD8Tcells = (T05 + T06 + T07 + T10 + T11 + T12 + T14 + T15 + T16 + T19)*50)
CellsPropBC2 <- CellsPropBC%>%
filter(Tissue=="Tumor")%>%
dplyr::select(`Sample ID`,EndothelialCells,EpithelialCells,Fibroblasts,Other,NK,BCells,PlasmaCells,DC,`CD4-T`,`CD8-T`,Macrophages,OtherImmune)%>%
column_to_rownames(var = "Sample ID")
#Select metadata from BC patients
MetaData <- MetaData%>%
mutate(Patient = rownames(CellsPropBC2))
StatusTumor <- MetaData%>%
dplyr::select(Patient,Status)
AgeResection <- MetaData%>%
dplyr::select(Patient,`Age at Surgery`)
AllCellsProps <-  CellsPropBC%>%
dplyr::select(`Sample ID`,EndothelialCells,EpithelialCells,Fibroblasts,Other,NK,BCells,PlasmaCells,DC,`CD4-T`,`CD8-T`,Macrophages,OtherImmune)%>%
column_to_rownames(var = "Sample ID")
## Select other healthy breast tissue (healthy patient or tissue close to the tumor)
JTCellsProps <- CellsPropBC%>%
filter(Tissue=="Juxta-tumoral")%>%
dplyr::select(`Sample ID`,EndothelialCells,EpithelialCells,Fibroblasts,Other,NK,BCells,PlasmaCells,DC,`CD4-T`,`CD8-T`,Macrophages,OtherImmune)%>%
column_to_rownames(var="Sample ID")
MCellsProps <- CellsPropBC%>%filter(Tissue=="Mammoplasty")%>%
dplyr::select(`Sample ID`,EndothelialCells,EpithelialCells,Fibroblasts,Other,NK,BCells,PlasmaCells,DC,`CD4-T`,`CD8-T`,Macrophages,OtherImmune)%>%
column_to_rownames(var="Sample ID")
p1 <- ggplot(data = CellsPropBC2)+
geom_boxplot(mapping=aes(y=Other))+
labs(title="Boxplot of proportions of other cells across 144 tumor samples (in %)")+
ylab("percentage")
p1
#p2 <- ggplot(data= CellsPropBC2)+
#            geom_boxplot(mapping=aes(y=Macrophages))+
#            labs(title="Boxplot of proportions of Macrophages across 144 tumor samples (in %)")+
#             ylab("percentage")
#p2
scBCPCA <- dudi.pca(df = CellsPropBC2,scale= FALSE, center=TRUE, scannf= FALSE, nf = length(colnames(CellsPropBC2))-1)
fviz_eig(scBCPCA)
#fviz_pca_biplot(scBCPCA,col.var = 'indianred2',col.ind = 'steelblue2',invisible = 'ind', repel = TRUE)
#fviz_pca_biplot(scBCPCA,axes=c(1,3),col.var = 'indianred2',col.ind = 'steelblue2',invisible = 'ind', repel = TRUE)
# Write coordinates of points in 3PCs in csv file : used for archetype analysis
write.csv(as.matrix(scBCPCA$li[,1:3]), "./data/3PCA_Wagner.csv",row.names=FALSE)
rownames(scBCPCA$co) <- set_cells_names(rownames(scBCPCA$co))
biplot12 <- fviz_pca_biplot(scBCPCA,col.var = 'darkred',col.ind = 'steelblue2',label= "var",repel=TRUE)
biplot12$labels$x <- str_replace(biplot12$labels$x,"Dim1",replacement="PC 1")
biplot12$labels$y <- str_replace(biplot12$labels$y,"Dim2",replacement="PC 2")
ggsave("./figs/biplotWagner.pdf",plot=biplot12)
biplot13 <- fviz_pca_biplot(scBCPCA,axes=c(1,3),col.var = 'indianred2',col.ind = 'steelblue2',label= "var",repel=TRUE)
biplot13$labels$x <- str_replace(biplot13$labels$x,"Dim1",replacement="PC 1")
biplot13$labels$y <- str_replace(biplot13$labels$y,"Dim3",replacement="PC 3")
#biplot12
#biplot13
scBCPCA.raw <- dudi.pca(CellsPropBC.raw,center=TRUE, scale=FALSE,scannf=FALSE,nf=3)
rownames(scBCPCA.raw$co) <-set_cells_names(rownames(scBCPCA.raw$co))
fviz_eig(scBCPCA.raw)
fviz_pca_biplot(scBCPCA.raw,
label= "var",invisible="ind",repel=TRUE)+theme_minimal()
fviz_pca_biplot(scBCPCA.raw,axes=c(1,3),col.var = 'firebrick3',
col.ind ='dodgerblue',label= "var",alpha.ind=0.3,
repel=TRUE)
pdf("./figs/biplot12Raw.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.raw,axes=c(1,2),label ="var",col.var="black",col.ind = "indianred2",repel=TRUE)
dev.off()
pdf("./figs/biplot13Raw.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.raw,axes=c(1,3),label ="var",col.var="black",col.ind = "indianred2",repel=TRUE)
dev.off()
var.names <- set_cells_names(colnames(CellsPropBC.raw))
scBCPCA.raw$co[,1:2]<-sweep(scBCPCA.raw$co[,1:2], 2, scBCPCA.raw$eig[1:2]^0.8, FUN='/')
scBCPCA.raw$li[,1:2] <-sweep(scBCPCA.raw$li[,1:2], 2, scBCPCA.raw$eig[1:2], FUN='/')
codata = 4*scBCPCA$co[,1:2]
g <- ggplot(data = scBCPCA$li[,1:2], aes(x = Axis1, y = Axis2)) +
geom_point(color="#ff3535")+
xlab("PC 1") + ylab("PC 2") + coord_equal()+
geom_segment(data = codata,
aes(x = 0, y = 0, xend = Comp1, yend = Comp2),
arrow = arrow(length = unit(1/2, 'picas')),
color = "black")+ #color = muted('red')
geom_text_repel(data = codata[c("CD4 T", "CD8 T", "B", "healthy tissue", "cancer", "macrophage", "other immune"),] %>% rownames_to_column("var.names"),
aes(label = var.names, x = Comp1, y = Comp2,
#angle = 10
),
color = 'black', size = 5)
g
ggsave("./figs/biplot12_wagner.pdf", height=3, width=4)
### Plot the tumors in the PCA space (3 first PCs that epxlain almost all of the variance of the dataset)
fig1 <- plot_ly(x = scBCPCA$li$Axis1,
y = scBCPCA$li$Axis2,
z = scBCPCA$li$Axis3,
#color =~CellsPropBC2$Other,
showlegend = TRUE,
type = "scatter3d", mode = "markers",
marker = list(symbol = "triangle", size = 6, color = toRGB("steelblue", .7)),
mode = "text",
name = "tumor")
#fig1 <- fig1 %>% add_trace(x=as.vector(JTissue_proj[,1]),
#                                 y=as.vector(JTissue_proj[,2]),
#                                 z=as.vector(JTissue_proj[,3]),
#                                 type="scatter3d",mode="markers",
#                                 showlegend=TRUE,
#                                 name="Juxta-tumoral tissue",
#                                 marker=list(color="mediumseagreen",symbol="star-diamond",size=6),
#                                 inherit = FALSE)
#fig1 <- fig1 %>% add_trace(x=as.vector(MTissue_proj[,1]),
#                                 y = as.vector(MTissue_proj[,2]),
#                                 z = as.vector(MTissue_proj[,3]),
#                                 type = "scatter3d",mode = "markers+text",
#                                 text = "healthy tissue",
#                                 showlegend = TRUE,
#                                 name = "Mammary healthy tissue",
#                                 marker = list(color="indianred2",symbol="star-diamond",size=6),
#                                 inherit = FALSE)
fig1 <- fig1 %>% layout(scene = list(xaxis = list(title = "PC1"),
yaxis = list(title = "PC2"),
zaxis = list(title = "PC3") ),
title = "PCA on cell proportions space of BC tumors")
fig1
cor(CellsProp, method="spearman")
knitr::opts_chunk$set(echo = TRUE)
gc()
rm(list=ls())
setwd(dir="/scratch/anissa.el/ImmuneStates/schurch_analysis")
library(tidyverse)
library(ggplot2)
library(factoextra)
library(MASS)
library(reticulate)
library(survival)
source("/scratch/anissa.el/ImmuneStates/wagner_analysis/scripts/R/Wagner_Keren_functions.r")
DataKeren <- read.csv("../wagner_analysis/data/archetypes_building_blocks_17cells_space_gaussian.csv")%>%column_to_rownames(var="archetype")
NeighborhKeren <- read.csv("./outputs/neighborhoods_mean_cell_abundance_gauss25.csv")
tmens <- t(as.matrix(DataKeren))
CNs <- as.matrix(NeighborhKeren)
outLR <- linear_regression(Y=CNs, B=tmens)
NB_CLUSTS <- 10
Alphas <- as_tibble(t(outLR$OmegaT),rownames=NA)%>%
rownames_to_column("cluster_id")%>%
mutate(sum_alphas = ARCH1+ARCH2+ARCH3+ARCH4)%>%
pivot_longer(cols= c("ARCH1","ARCH2","ARCH3","ARCH4"),names_to="TMEN",values_to="weight")%>%mutate(cluster_id = as.numeric(cluster_id))%>%
mutate(TMEN = str_replace_all(TMEN, c(ARCH1 = "TLS",ARCH2 = "inflammatory",
ARCH3 = "cancer",ARCH4 = "fibrotic/necrotic")))
## FIXME : change ARCH Nnames to TMEN names, ARCH1 =>TLS
ggplot(Alphas, aes(x= cluster_id,y=weight, group=TMEN, color=TMEN))+
geom_line()+
scale_x_continuous(breaks=Alphas$cluster_id) +
geom_line(aes(x= as.numeric(cluster_id),y=sum_alphas),color="black",group="sum weights")+
xlab("cluster") + ylab("proportion")
ObsClust.cells <- NeighborhKeren%>%rownames_to_column(var="cluster_id")%>%
pivot_longer(cols = colnames(CNs),names_to="cell_type",values_to="obs_density")
PredClust.cells <- as_tibble(t(outLR$OmegaT)%*% t(tmens),rownames=NA)%>%rownames_to_column(var="cluster_id")%>%
pivot_longer(cols = colnames(CNs),names_to="cell_type",values_to="pred_density")
ObsVSPred.cells <- inner_join(ObsClust.cells,PredClust.cells,by=c("cluster_id","cell_type"))
ggplot(ObsVSPred.cells,aes(x=obs_density,y=pred_density,color=cluster_id))+
geom_point()+scale_x_continuous(trans="log10")+scale_y_continuous(trans="log10")+
scale_color_brewer(palette="Paired")+
geom_abline(slope=1,intercept=0,linetype="dashed")+
facet_wrap(~cell_type,ncol=6,labeller = "label_value")+
xlab("observed cell density") + ylab("predicted cell density")+
theme(axis.text.x = element_text(angle = 45, vjust = .2))
ggsave("./figs/CLUSTobs_vs_TMENspred_cells.pdf",height=4,width=3)
ObsClust.cells <- NeighborhKeren%>%rownames_to_column(var="cluster_id")%>%
pivot_longer(cols = colnames(CNs),names_to="cell_type",values_to="obs_density")
PredClust.cells <- as_tibble(t(outLR$OmegaT)%*% t(tmens),rownames=NA)%>%rownames_to_column(var="cluster_id")%>%
pivot_longer(cols = colnames(CNs),names_to="cell_type",values_to="pred_density")
ObsVSPred.cells <- inner_join(ObsClust.cells,PredClust.cells,by=c("cluster_id","cell_type"))
ggplot(ObsVSPred.cells,aes(x=obs_density,y=pred_density,color=cluster_id))+
geom_point()+scale_x_continuous(trans="log10")+scale_y_continuous(trans="log10")+
scale_color_brewer(palette="Paired")+
geom_abline(slope=1,intercept=0,linetype="dashed")+
facet_wrap(~cell_type,ncol=6,labeller = "label_value")+
xlab("observed cell density") + ylab("predicted cell density")+
theme(axis.text.x = element_text(angle = 45, vjust = .2))
ggsave("./figs/CLUSTobs_vs_TMENspred_cells.pdf",height=5,width=6)
ObsClust.cells <- NeighborhKeren%>%rownames_to_column(var="cluster_id")%>%
pivot_longer(cols = colnames(CNs),names_to="cell_type",values_to="obs_density")
PredClust.cells <- as_tibble(t(outLR$OmegaT)%*% t(tmens),rownames=NA)%>%rownames_to_column(var="cluster_id")%>%
pivot_longer(cols = colnames(CNs),names_to="cell_type",values_to="pred_density")
ObsVSPred.cells <- inner_join(ObsClust.cells,PredClust.cells,by=c("cluster_id","cell_type"))
ggplot(ObsVSPred.cells,aes(x=obs_density,y=pred_density,color=cluster_id))+
geom_point()+scale_x_continuous(trans="log10")+scale_y_continuous(trans="log10")+
scale_color_brewer(palette="Paired")+
geom_abline(slope=1,intercept=0,linetype="dashed")+
facet_wrap(~cell_type,ncol=6,labeller = "label_value")+
xlab("observed cell density") + ylab("predicted cell density")+
theme(axis.text.x = element_text(angle = 45, vjust = .2))
ggsave("./figs/CLUSTobs_vs_TMENspred_cells.pdf",height=5,width=8)
knitr::opts_chunk$set(echo = TRUE)
#library(knitr)
#pandoc('input.md', format = 'latex')
rm(list=ls())
library(tidyverse)
library(ade4)
library(factoextra)
library(readxl)
library(reshape2)
library(plotly)
library(igraph)
library(viridis)
#library("ClusterR")
#library(cluster)
setwd("/scratch/anissa.el/ImmuneStates/wagner_analysis")
source ("./scripts/R/Wagner_Keren_functions.r") # Some useful functions for Keren and Wagner Data processing
MetaData <- read_excel("./data/mmc2.xlsx",col_names=TRUE,skip=1)%>%dplyr::rename(Patient=`Patient ID`)
MetaData<- MetaData%>%mutate(Status = ifelse(`ER Status by IHC`=='P' & `PR Status by IHC`=='P'& `HER2 Status by IHC`=='N',"ER+PR+",
ifelse(`ER Status by IHC`=='P' & `PR Status by IHC`=='N'& `HER2 Status by IHC`=='N',"ER+",
ifelse(`ER Status by IHC`=='N' & `PR Status by IHC`=='P'& `HER2 Status by IHC`=='N',"PR+",
ifelse(`ER Status by IHC`=='N' & `PR Status by IHC`=='N'& `HER2 Status by IHC`=='P',"HER2+",
ifelse(`ER Status by IHC`=='N' & `PR Status by IHC`=='N'& `HER2 Status by IHC`=='N',"TN",
ifelse(`ER Status by IHC`=='N' & `PR Status by IHC`=='P'& `HER2 Status by IHC`=='P',"PR+HER2+",
ifelse(`ER Status by IHC`=='P' & `PR Status by IHC`=='P'& `HER2 Status by IHC`=='P',"HER2+","Unknown")))  )))))
#Check the tumors for which patients received a Neoadjuvant treatment ==> this may interfere with the proportions of T cells in the sample:
NeoAdjuvant <- MetaData%>%filter(`Neoadjuvant Therapy Received` =="yes")
# FIrst, we remove the old objects stored in the R environment
CellsProp <-read_excel("./data/mmc5.xlsx",col_names=TRUE,skip=2)
#colnames(CellsProp)
CellsPropBC <- CellsProp%>%filter(`LiveCells [%]`>50)#CellsProp%>%filter(Tissue=="Tumor")%>%filter(`LiveCells [%]`>50)
#CellsPropBC <- left_join(CellsPropBC,MetaData,by="Patient")%>%filter(`Neoadjuvant Therapy Received` !="yes")
CellsPropBC <- CellsPropBC%>%
mutate(LiveCells_tot= `EndothelialCells [%]`+`EpithelialCells [%]`+`Fibroblasts [%]`+`ImmuneCells [%]`+`Other [%]`)
CellsPropBC <- CellsPropBC%>%
mutate(EndothelialCells=((`EndothelialCells [%]`/LiveCells_tot))*100)%>%
mutate(EpithelialCells=((`EpithelialCells [%]`/LiveCells_tot))*100)%>%
mutate(Fibroblasts=((`Fibroblasts [%]`/LiveCells_tot))*100)%>%
mutate(ImmuneCells=((`ImmuneCells [%]`/LiveCells_tot))*100)%>%
mutate(Other=((`Other [%]`/LiveCells_tot))*100)
#Correction to ImmuneCells percentage
CellsPropBC <- CellsPropBC%>%
mutate(TCells= (`TCells [%]`/100)*ImmuneCells)%>%
mutate(NK= (`NaturalKillerCells [%]`/100)*ImmuneCells)%>%
mutate(Granulocytes = (`Granulocytes [%]`/100)*ImmuneCells)%>%
mutate(BCells= (`BCells [%]`/100)*ImmuneCells)%>%
mutate(PlasmaCells= (`PlasmaCells [%]`/100)*ImmuneCells)%>%
mutate(DC= (`plasmacytoidDendriticCells [%]`/100)*ImmuneCells)%>%
mutate(MyeloidCells= (`MyeloidCells [%]`/100)*ImmuneCells)%>%
mutate(Basophils= (`Basophils [%]`/100)*ImmuneCells)
## Let's check for the proportion of T cells across the tumor samples
#ggplot(data= CellsPropBC)+
#  geom_boxplot(mapping=aes(y=TCells))+
# labs(title="Boxplot of proportions of T cells across 144 tumor samples (in %)")+
#  ylab("percentage")
## Correcyion of T cells percentage
CellsPropBC <- CellsPropBC%>%
mutate(sumTcells = `TCells CD4+ [%]`+`TCells CD8+ [%]`)%>%
mutate(OtherTcells = ((100 - sumTcells)/100)*TCells)%>%
mutate(`CD4-T` = (`TCells CD4+ [%]`/100)*TCells)%>%
mutate(`CD8-T` = (`TCells CD8+ [%]`/100)*TCells)
## Correction to myeloid cells percentage
CellsPropBC <- CellsPropBC %>% mutate(Monocytes = (M06 + M15)*MyeloidCells)%>%
mutate (Macrophages = (M01 + M02 + M03 + M04 + M08 + M09 + M11 + M13 + M14 + M16 + M17)*MyeloidCells)%>%
mutate(OtherMyeloid = (M05 + M07 + M10 + M12 + M18 + M19)*MyeloidCells)%>%
mutate(OtherImmune = OtherMyeloid+ OtherTcells+Basophils+Granulocytes+Monocytes)
#mutate(CD4TCells = (T02+T03+T04+T08+T09+T13+T17+T18+T20)*50)%>%
#mutate(Tregs = T01*50)%>%
#mutate(CD8Tcells = (T05 + T06 + T07 + T10 + T11 + T12 + T14 + T15 + T16 + T19)*50)
CellsPropBC2 <- CellsPropBC%>%filter(Tissue=="Tumor")%>%dplyr::select(`Sample ID`,EndothelialCells,EpithelialCells,Fibroblasts,Other,NK,BCells,PlasmaCells,DC,`CD4-T`,`CD8-T`,Macrophages,OtherImmune)%>%
column_to_rownames(var="Sample ID")
#Select metadata from BC patients
MetaData<- MetaData%>%mutate(Patient=rownames(CellsPropBC2))
StatusTumor <- MetaData%>%dplyr::select(Patient,Status)
AgeResection <-MetaData%>%dplyr::select(Patient,`Age at Surgery`)
AllCellsProps <-  CellsPropBC%>%dplyr::select(`Sample ID`,EndothelialCells,EpithelialCells,Fibroblasts,Other,NK,BCells,PlasmaCells,DC,`CD4-T`,`CD8-T`,Macrophages,OtherImmune)%>%
column_to_rownames(var="Sample ID")
library(gplots)
CellsPropBC2.types <- as_tibble(CellsPropBC2,rownames=NA)%>%
pivot_longer(cols=colnames(CellsPropBC2),names_to="cell_type",
values_to="proportion")
ggplot(CellsPropBC2.types,aes(x=cell_type,y=proportion,fill=cell_type))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45,hjust=0.8,vjust=0.5),
legend.title = element_blank())+
xlab(" ") + ylab("raw proportion")
#heatmap(cor(CellsPropBC2),Rowv = NA,Colv = NA,scale="none")
CellsPropBC2.2 <- CellsPropBC2
colnames(CellsPropBC2.2) <- set_cells_names(colnames(CellsPropBC2.2))
pdf("./figs/heatmapRawCells.pdf",width=5,height=5)
heatmap.2(cov(CellsPropBC2.2),Colv = NA,Rowv = NA,dendrogram = "none",
key = FALSE,margins = c(2,5),#srtCol = 45,srtRow =  45,
lmat = rbind(c(0,0,0),c(0,1,0),c(0,0,0)),lhei=c(0.5,1,0.75),lwid=c(0.5,1,0.5),
density.info = "none",trace = "none",col = viridis(12))
dev.off()
#CellsPropBC2<- CellsPropBC2%>%filter(Other<=50)
#(2/pi *sqrt(asin(CellsPropBC2/100)))
#library(Rtsne)
cells.means <- apply(CellsPropBC2,MARGIN=2, function(x) mean(x))
CellsPropBC2.types2 <- as_tibble(CellsPropBC2/cells.means,rownames=NA)%>%
pivot_longer(cols=colnames(CellsPropBC2),names_to="cell_type",
values_to="proportion")
ggplot(CellsPropBC2.types2,aes(x = cell_type,y = proportion,fill = cell_type))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45,hjust=0.8,vjust=0.5),
legend.title = element_blank())+
xlab(" ") + ylab("proportion per mean of cell type")
scBCPCA.scaleMean <- dudi.pca(CellsPropBC2.2/cells.means,scale = FALSE,
center = TRUE,scannf = FALSE,nf = 3)
fviz_pca_biplot(scBCPCA.scaleMean,invisible = "ind",repel = TRUE)
pdf("./figs/biplot12MeanScale.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.scaleMean,axes=c(1,2),label ="var",col.var="black",col.ind = "indianred2",repel=TRUE)
dev.off()
pdf("./figs/biplot13MeanScale.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.scaleMean,axes=c(1,3),label ="var",col.var="black",col.ind = "indianred2",repel=TRUE)
dev.off()
fviz_eig(scBCPCA.scaleMean)
fig11 <- plot_ly(x = scBCPCA.scaleMean$li$Axis1,
y = scBCPCA.scaleMean$li$Axis2,
z = scBCPCA.scaleMean$li$Axis3,
color =~CellsPropBC2$`Other`,
type = "scatter3d", mode = "markers",
marker = list(symbol = "triangle",size = 4),
mode = "text")
fig11 <- fig11 %>% layout(scene = list(xaxis = list(title = "PC1"),
yaxis = list(title = "PC2"),
zaxis = list(title = "PC3")),
title = "PCA on cell proportions space of BC tumors")
fig11
pdf("./figs/heatmapMeanScaling.pdf",width=5,height=5)
heatmap.2(cov(CellsPropBC2.2/cells.means),Colv = NA,Rowv = NA,dendrogram = "none",
key = FALSE,margins = c(4,6),#srtCol = 45,srtRow =  45,
lmat = rbind(c(0,0,0),c(0,1,0),c(0,0,0)),lhei=c(0.5,1,0.75),lwid=c(0.5,1,0.5),
density.info = "none",trace = "none",col = viridis(12))
dev.off()
#CellsPropBC2<- CellsPropBC2%>%filter(Other<=50)
CellsPropBC2log.types <- as_tibble(log2(CellsPropBC2+1),rownames=NA)%>%pivot_longer(cols=colnames(CellsPropBC2),
names_to="cell_type",
values_to="proportion")
ggplot(CellsPropBC2log.types,aes(x=cell_type,y=proportion,fill=cell_type))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45,hjust=0.8,vjust=0.5),
legend.title=element_blank())+
xlab("")+ylab("log(proportion)")
#(2/pi *sqrt(asin(CellsPropBC2/100)))
#library(Rtsne)
cells.means <- apply(CellsPropBC2,MARGIN=2, function(x) mean(x))
heatmap(cor(log2(CellsPropBC2.2+1)),Rowv = NA,Colv = NA,scale="none")
pdf("./figs/heatmapLog2.pdf",width=5,height=5)
heatmap.2(cov(log2(CellsPropBC2.2+1)),Colv = NA,Rowv = NA,dendrogram = "none",
key = FALSE,margins = c(4,6),#srtCol = 45,srtRow =  45,
lmat = rbind(c(0,0,0),c(0,1,0),c(0,0,0)),lhei=c(0.5,1,0.75),lwid=c(0.5,1,0.5),
density.info = "none",trace = "none",col = viridis(12))
dev.off()
scBCPCA.log <- dudi.pca(log2(CellsPropBC2.2+1),scale=FALSE,center=TRUE,scannf=FALSE,nf=3)
pdf("./figs/biplot12Log2.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.log,axes=c(1,2),label ="var",col.var="black",col.ind = "indianred2",repel=TRUE)
dev.off()
pdf("./figs/biplot13Log2.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.log,axes=c(1,3),label ="var",col.var="black",col.ind = "indianred2",repel=TRUE)
dev.off()
fviz_eig(scBCPCA.log)
fig12 <- plot_ly(x = scBCPCA.log$li$Axis1,
y = scBCPCA.log$li$Axis2,
z = scBCPCA.log$li$Axis3,
color =~CellsPropBC2$`Other`,
type = "scatter3d", mode = "markers",
marker = list(symbol = "triangle",size = 8),
mode = "text")
fig12 <- fig12 %>% layout(scene = list(xaxis = list(title = "PC1"), yaxis = list(title = "PC2"), zaxis = list(title = "PC3") ),
title = "PCA on cell proportions space of BC tumors")
fig12
# de-correlate the cells using sample() as a row-wise operation (for each tumor)
# For each randomization, we perform an unscaled, centered PCA on the data
# We then collect the list of eigen values for each principal component
# A cumulative sum of variance explained is then computed (in %)
# The results are plotted in a figure with the mean of those shuffled +/- 2 sd
nbShuffles <- 100
nPC <- length(colnames(CellsPropBC2))
EigenVals.rand <- matrix(nrow = nbShuffles,ncol = nPC)
set.seed(15) # for reproducibility
for (i in 1:nbShuffles){
CellsPropBC.rand <- apply(CellsPropBC2,MARGIN = 2,function(x) sample(x,size = length(x),replace = FALSE)) ## Column-wise operation ==> MARGIN=2
sumsSamples <- apply(CellsPropBC.rand,MARGIN=1,function(x) sum(x))
CellsPropBC.rand2 <- (CellsPropBC.rand/sumsSamples)*100
CellsPropBC.rand.log2 <- log2(CellsPropBC.rand2+1)
eigs <- dudi.pca(CellsPropBC.rand.log2,scale = FALSE,center = TRUE,nf = 3, scannf = FALSE)$eig
#print(length(eigs))
EigenVals.rand[i,]<- cumsum(eigs/sum(eigs)*100)
}
# Original data: PropsBC.CLR2
#### Get mean and +/- sd of the eigen values from shuffles (100 shuffles)
scBC.rand.CumEigs.mean <- apply(EigenVals.rand,MARGIN = 2,function(x) mean(x))
scBC.rand.CumEigs.sdUp <- apply(EigenVals.rand,MARGIN = 2,function(x) mean(x) + 2*sd(x))
scBC.rand.CumEigs.sdLow <- apply(EigenVals.rand,MARGIN = 2,function(x) mean(x) - 2*sd(x))
scBC.CumEigs <- cumsum(scBCPCA.log$eig/sum(scBCPCA.log$eig)*100) # Eigen vlaues of PCA from real tumors (CellsPropBC2 abundance matrix as input)
#Correlation map after randomization
heatmap(cor(CellsPropBC.rand.log2,method = "pearson"),Colv = NA,Rowv = NA,col = viridis(12))
nbComp <- seq(1,nPC,1)
CumEigs.rand <- as_tibble(cbind(scBC.rand.CumEigs.sdUp,scBC.rand.CumEigs.sdLow))%>%
mutate(nbComp = nbComp)
CumEigs <- as_tibble(cbind(scBC.CumEigs,scBC.rand.CumEigs.mean))%>%
mutate(nbComp = nbComp)
CumEigs<-CumEigs%>%
dplyr::rename(`real \ntumors` = scBC.CumEigs)%>%
dplyr::rename(`shuffled \ntumors` = scBC.rand.CumEigs.mean)%>%
pivot_longer(cols = c(`real \ntumors`, `shuffled \ntumors`),
names_to = "groups",
values_to = "value")
ggplot()+
geom_line(data = CumEigs,
aes(x = nbComp,y = value,
group = groups,color = groups,
linetype = groups))+
scale_linetype_manual(values = c("solid", "twodash"))+
scale_color_manual(values = c("black","red"))+
scale_size_manual(values = c(2, 2))+
geom_vline(xintercept = 3, linetype = "dotted",
color = "black", size = 0.8)+
labs(x="Number of Principal Components (PCs)",
y="% of variance in cellular \ncomposition of tumors")+
theme(legend.title = element_blank())+
geom_ribbon(data = CumEigs.rand, aes(x = nbComp,
ymin = scBC.rand.CumEigs.sdLow,
ymax = scBC.rand.CumEigs.sdUp),
fill = "indianred2",alpha = 0.3)
#ggsave("./figs/EigsRandWagner.pdf", height = 3, width = 4)
#install.packages("zCompositions")
#install.packages("compositions")
library(zCompositions)
library(compositions)
#multLN(CellsPropBC2)
CellsPropBC.corrected <- CellsPropBC2 +1
geom.means <- apply(CellsPropBC.corrected,MARGIN=1,function(x) exp(mean(log(x))))
PropsBC.CLR2 <- clr(CellsPropBC.corrected)#log(CellsPropBC.corrected/geom.means)#t(apply(CellsPropBC.corrected,MARGIN=1,function(x) log(x/geom.means)))
#colnames(PropsBC.CLR) <- colnames(CellsPropBC2)
PropsBC.CLR <- log(CellsPropBC.corrected/geom.means)
colnames(PropsBC.CLR2) <- set_cells_names(colnames(PropsBC.CLR2))
plot(x = PropsBC.CLR2$fibroblast,
y = PropsBC.CLR2$endothelial,
xlab = "Fibroblast (clr(%))",
ylab = "Endothelial (clr(%))")
plot(x = PropsBC.CLR2$B,
y = PropsBC.CLR2$`CD4 T`,
xlab="B (clr(%))",
ylab="CD4 T clr((%))")
PropsBC.CLR.types <- as_tibble(PropsBC.CLR2,rownames = NA)%>%
pivot_longer(cols = colnames(PropsBC.CLR2),
names_to = "cell_type",
values_to = "proportion")
ggplot(PropsBC.CLR.types,aes(x = cell_type,
y = proportion,
fill = cell_type))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 45,hjust = 0.8,vjust = 0.5),
legend.title = element_blank())+
xlab("")+ylab("CLR (Centered Log ratio)")
#PropsBC.CLR2.types <- as_tibble(PropsBC.CLR2,rownames=NA)%>%pivot_longer(cols=colnames(PropsBC.CLR2),
#                                                  names_to="cell_type",
#                                                  values_to="proportion")
#ggplot(PropsBC.CLR2.types,aes(x=cell_type,y=proportion,fill=cell_type))+
#  geom_boxplot()
#heatmap(cov(PropsBC.CLR),colV=NA,Rowv = NA)
#rowSums(PropsBC.CLR)
scBCPCA.CLR <- dudi.pca(PropsBC.CLR2,scale=FALSE,center=TRUE,scannf=FALSE,nf=3)
write.csv(as.matrix(scBCPCA.CLR$li), "/scratch/anissa.el/ImmuneStates/wagner_analysis/data/3PCA_Wagner_CLR.csv",row.names=FALSE)
pdf("./figs/biplot12CLR.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.CLR,axes=c(1,2),label ="var",col.var="black",col.ind = "indianred2",repel=TRUE)
dev.off()
pdf("./figs/biplot13CLR.pdf",width = 4,height = 3)
fviz_pca_biplot(scBCPCA.CLR,axes=c(1,3),col.var="black",label="var",col.ind = "indianred2",repel=TRUE)
dev.off()
fviz_pca_biplot(scBCPCA.CLR,axes=c(2,3),col.var="black",label="var",col.ind = "indianred2",repel=TRUE)
fviz_eig(scBCPCA.CLR)
fig12 <- plot_ly(x = scBCPCA.CLR$li$Axis1,
y = scBCPCA.CLR$li$Axis2,
z = scBCPCA.CLR$li$Axis3,
color =~CellsPropBC2$`Other`,
type = "scatter3d", mode = "markers",
marker = list(symbol = "triangle",size = 8),
mode = "text")
fig12 <- fig12 %>% layout(scene = list(xaxis = list(title = "PC1"), yaxis = list(title = "PC2"), zaxis = list(title = "PC3") ),
title = "PCA on cell proportions space of BC tumors")
fig12
# heatmap.2(cor(CellsPropBC2),Colv = NA,Rowv = NA,dendrogram = "none",
#           srtCol = 45,srtRow =  45,key = FALSE,margins = c(5,8),
#           lmat = c(2,1),lhei = 1.5,lwid = 1.5,      #lmat = rbind( c(5,3,4), c(2,1,4) ), lhei = c(1.5, 4) , lwid = c(1.5, 4, 0.75),
#           density.info = "none",trace = "none",col = viridis(12))
#heatmap(cor(PropsBC.CLR),Rowv = NA,Colv = NA,scale="none")
#heatmap.2(cor(PropsBC.CLR),Rowv = NA,Colv = NA,scale = "none",
#          srtCol = 45,srtRow =  45,key = FALSE,margins = c(5,8),
#          density.info = "none",trace = "none",col = viridis(12))
pdf("./figs/heatmapCLR.pdf",width = 5,height = 5)
heatmap.2(cov(PropsBC.CLR2),Colv = NA,Rowv = NA,dendrogram = "none",
key = FALSE,margins = c(4,6),#srtCol = 45,srtRow =  45,
lmat = rbind(c(0,0,0),c(0,1,0),c(0,0,0)),lhei=c(0.5,1,0.75),lwid=c(0.5,1,0.5), #rbind(c(0,0,0),c(0,1,0),c(0,1,0)),lhei=c(0.25,1.5,0.75),lwid=c(0.5,1.5,0.5),
density.info = "none",trace = "none",col = viridis(12))
dev.off()
varExp3PC.clr <- sum( scBCPCA.CLR$eig[1:3]/sum( scBCPCA.CLR$eig))*100
set.seed(250)
km.res <- kmeans(as.matrix(scBCPCA.CLR$li), 2, nstart = 4)
fig3 <- plot_ly(x = scBCPCA.CLR$li$Axis1,
y = scBCPCA.CLR$li$Axis2,
z = scBCPCA.CLR$li$Axis3,
color =~as.factor(km.res$cluster),
type = "scatter3d", mode = "markers",
marker = list(symbol = "triangle",size = 8),
mode = "text")
fig3 <- fig3 %>% layout(scene = list(xaxis = list(title = "PC1"), yaxis = list(title = "PC2"), zaxis = list(title = "PC3") ),
title = "PCA on cell proportions space of BC tumors")
fig3
scBC.TME.PCA <-scBCPCA.CLR[km.res$cluster ==2,]
write.csv(as.matrix(scBC.TME.PCA$li), "/srv/mfs/hausserlab/anissa.el/ImmuneStates/wagner_analysis/data/3PCA_Wagner_CLR_clust1.csv",row.names=FALSE)
reticulate::repl_python()
